#!/usr/local/bin/ansible-playbook --inventory=inventory
- name: ' Koffer | Artifact Rake Utility' 
  hosts: local
  vars:
    module: "shaman-vpc"
    state_provider: "local"
    tf_module_path: "{{ dir_terraform }}/shaman-vpc"
    ansible_name_module_cloud: " {{ module }}"

  tasks:

    ####### Stage Variables Template
    - name: '{{ ansible_name_module_cloud }} | template | Terraform Vars'
      template:
        src: "{{ item.name }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      loop: 
        - { mode: '755', name: "templates/terraform/global.tfvars.j2", dest: "{{ tf_module_path }}/global.tfvars"}

    ####### Terraform Init
    - name: '{{ ansible_name_module_cloud }} | shell | terraform init'
      shell: terraform init
      args:
        chdir: "{{ tf_module_path }}"

    ####### Terraform Apply
    - name: '{{ ansible_name_module_cloud }} | terraform | apply'
      terraform:
        project_path: "{{ tf_module_path }}"
        variables_file: "{{ tf_module_path }}/global.tfvars"
        force_init: true
        state: present
      register: tf_output

#   ####### Purge SSH known_hosts entries if previous entries found
#   - name: '{{ ansible_name_module_cloud }} | lineinfile | purge previous known_hosts entries'
#     lineinfile:
#       dest: "{{ local_home }}/.ssh/known_hosts"
#       regexp: "{{ item.regex }}"
#       state: absent
#     with_items:
#       - { regex: ensign }
#       - { regex: '{{ tf_output.outputs.public_ipv4.value }}' }
#
#   ####### Declare result & public address of instance
#   - name: 'Ensign Public IP Address'
#     debug: 
#       msg:
#       - "New instance created at the following ip address:"
#       - "{{ tf_output.outputs.public_ipv4.value }}"
