#!/usr/local/bin/ansible-playbook --inventory=inventory
- name: ' Konductor | Devkit | Build VPC' 
  hosts: local
  vars:
    module: "build"
    state_provider: "local"
    tf_module_path: "{{ dir_terraform }}/devkit-vpc"
    ansible_name_module: " Konductor | Devkit VPC | {{ module }}"
  vars_files:
    - vars/global.yml



  tasks:

    ####### Symlinks
#   - name: '{{ ansible_name_module }} | variable | Create Provider symlink'
#     file:
#       src: "{{ tf_module_path }}/provider.tf"
#       dest: "{{ item }}"
#       state: link
#     loop:
#       - "{{ tf_module_path }}/vpc/provider.tf"
#       - "{{ tf_module_path }}/security-groups/provider.tf"
#       - "{{ tf_module_path }}/iam-roles/provider.tf"
#       - "{{ tf_module_path }}/bastion-node/provider.tf"
#       - "{{ tf_module_path }}/registry-node/provider.tf"
#       - "{{ tf_module_path }}/route-53/provider.tf"

    ####### Terraform Init
    - name: '{{ ansible_name_module }} | shell | terraform init'
      shell: terraform init
      loop:
        - "{{ tf_module_path }}"
        - "{{ tf_module_path }}/vpc"

    ####### Terraform Apply
    - name: '{{ ansible_name_module }} | terraform | apply'
      terraform:
        project_path: "{{ tf_module_path }}"
        variables_file: "{{ tf_module_path }}/global.tfvars"
        force_init: true
        state: present
      register: tf_output



#   ####### Purge SSH known_hosts entries if previous entries found
#   - name: '{{ ansible_name_module }} | lineinfile | purge previous known_hosts entries'
#     lineinfile:
#       dest: "{{ local_home }}/.ssh/known_hosts"
#       regexp: "{{ item.regex }}"
#       state: absent
#     with_items:
#       - { regex: ensign }
#       - { regex: '{{ tf_output.outputs.public_ipv4.value }}' }
#
#   ####### Declare result & public address of instance
#   - name: 'Ensign Public IP Address'
#     debug: 
#       msg:
#       - "New instance created at the following ip address:"
#       - "{{ tf_output.outputs.public_ipv4.value }}"
